#include "pando_tra.h"


pando_tra::pando_tra(){}//ctor
pando_tra::~pando_tra(){}//dtor
pando_tra::pando_tra(const pando_tra& other){}//copy ctor
/* handle self assignment*//*assignment operator*/
pando_tra& pando_tra::operator=(const pando_tra& rhs){if (this == &rhs) return *this; return *this;}


int pando_tra::clear_pos(){
   posz[0]=-1;posz[1]=-1;posz[2]=-1;
   rvl[0]=-1;rvl[1]=-1;rvl[2]=-1;
   stt=0;
   return 0;
}

int pando_tra::orizontia_unreverse(int a,int b){
    cout<<"using order of " << a << " " << b <<"\n";
     int x=7;
     clear_pos();
     stt=0;
     for(int i=0;i<=5;i++){
       if(efta[i]==a && efta[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=exi[posz[0]];
                    rvl[1]=exi[posz[1]];
                    cout<<"Possible sum \n";
                    cout<<"@7-6 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
    // if(stt==1){
     clear_pos();
     for(int i=0;i<=5;i++){
       if(exi[i]==a && exi[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=pente[posz[0]];
                    rvl[1]=pente[posz[1]];
                    cout<<"@6-5 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(pente[i]==a && pente[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=tessera[posz[0]];
                    rvl[1]=tessera[posz[1]];
                    cout<<"@5-4 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(tessera[i]==a && tessera[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=tria[posz[0]];
                    rvl[1]=tria[posz[1]];
                    cout<<"@4-3 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(tria[i]==a && tria[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=dio[posz[0]];
                    rvl[1]=dio[posz[1]];
                    cout<<"@3-2 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(dio[i]==a && dio[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=ena[posz[0]];
                    rvl[1]=ena[posz[1]];
                    cout<<"@2-1 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(ena[i]==a && ena[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=okto[posz[0]];
                    rvl[1]=okto[posz[1]];
                    cout<<"@1-8 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(okto[i]==a && okto[i+1]==b){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=efta[posz[0]];
                    rvl[1]=efta[posz[1]];
                    cout<<"@8-7 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // }
return stt;
}
int pando_tra::orizontia_reverse(int a,int b){
  cout<<"using order " << b << " " << a <<"\n";
 int x=7;
     clear_pos();
     stt=0;
     for(int i=0;i<=5;i++){
       if(efta[i]==b && efta[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=exi[posz[0]];
                    rvl[1]=exi[posz[1]];
                    cout<<"Possible sum \n";
                    cout<<"@7-6 : "<< rvl[0] << " and " << rvl[1] <<" or in reverse \n";;
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     //if(stt==1){
     clear_pos();
     for(int i=0;i<=5;i++){
       if(exi[i]==b && exi[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=pente[posz[0]];
                    rvl[1]=pente[posz[1]];
                    cout<<"@6-5 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(pente[i]==b && pente[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=tessera[posz[0]];
                    rvl[1]=tessera[posz[1]];
                    cout<<"@5-4 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(tessera[i]==b && tessera[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=tria[posz[0]];
                    rvl[1]=tria[posz[1]];
                    cout<<"@4-3 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(tria[i]==b && tria[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=dio[posz[0]];
                    rvl[1]=dio[posz[1]];
                    cout<<"@3-2 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(dio[i]==b && dio[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=ena[posz[0]];
                    rvl[1]=ena[posz[1]];
                    cout<<"@2-1 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(ena[i]==b && ena[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=okto[posz[0]];
                    rvl[1]=okto[posz[1]];
                    cout<<"@1-8 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
    // if(stt==0){cout<<"-------\n";}
     clear_pos();
     for(int i=0;i<=5;i++){
       if(okto[i]==b && okto[i+1]==a){
            posz[0]=i;
            posz[1]=i+1;
            stt=1;
       }
       if(stt==1){
                    rvl[0]=efta[posz[0]];
                    rvl[1]=efta[posz[1]];
                    cout<<"@8-7 : "<< rvl[0] << " and " << rvl[1] <<"\n";
                    break;
                 }
     }
     //}
return stt;
}
int pando_tra::katheta_unreverse(int a ,int b){
  cout<<"using in order " << a << " down and b up  " << b <<"\n";
  clear_pos();
  rst=0;
  for(int i=0;i<=5;i++){
     if(okto[i]==b){posz[0]=i-1; rvl[0]=okto[posz[0]];
     for(int y=0;y<=5;y++){
     if(efta[y]==a && i==y){posz[1]=y-1;rvl[1]=efta[posz[1]]; stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@8 ^7 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(efta[i]==b){posz[0]=i-1; rvl[0]=efta[posz[0]];
     for(int y=0;y<=5;y++){
     if(exi[y]==a && i==y){posz[1]=y-1;rvl[1]=exi[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@7 ^6 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(exi[i]==b){posz[0]=i-1; rvl[0]=exi[posz[0]];
     for(int y=0;y<=5;y++){
     if(pente[y]==a && i==y){posz[1]=y-1;rvl[1]=pente[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@6 ^5 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(pente[i]==b){posz[0]=i-1; rvl[0]=pente[posz[0]];
     for(int y=0;y<=5;y++){
     if(tessera[y]==a && i==y){posz[1]=y-1;rvl[1]=tessera[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@5 ^4 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(tessera[i]==b){posz[0]=i-1; rvl[0]=tessera[posz[0]];
     for(int y=0;y<=5;y++){
     if(tria[y]==a && i==y){posz[1]=y-1;rvl[1]=tria[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@4 ^3 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(tria[i]==b){posz[0]=i-1; rvl[0]=tria[posz[0]];
     for(int y=0;y<=5;y++){
     if(dio[y]==a && i==y){posz[1]=y-1;rvl[1]=dio[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@3 ^2 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(dio[i]==b){posz[0]=i-1; rvl[0]=dio[posz[0]];
     for(int y=0;y<=5;y++){
     if(ena[y]==a && i==y){posz[1]=y-1;rvl[1]=ena[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@2 ^1 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(ena[i]==b){posz[0]=i-1; rvl[0]=ena[posz[0]];
     for(int y=0;y<=5;y++){
     if(okto[y]==a && i==y){posz[1]=y-1;rvl[1]=okto[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@1 ^8 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
return rst;
}
int pando_tra::katheta_reverse(int a,int b){
 cout<<"using in order " << a << " down and b up  " << b <<"\n";
  clear_pos();
  rst=0;
  for(int i=0;i<=5;i++){
     if(okto[i]==b){posz[0]=i-1; rvl[0]=okto[posz[0]];
     for(int y=0;y<=5;y++){
     if(efta[y]==a && i==y){posz[1]=y-1;rvl[1]=efta[posz[1]]; stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@8 ^7 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(efta[i]==a){posz[0]=i-1; rvl[0]=efta[posz[0]];
     for(int y=0;y<=5;y++){
     if(exi[y]==b && i==y){posz[1]=y-1;rvl[1]=exi[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@7 ^6 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(exi[i]==a){posz[0]=i-1; rvl[0]=exi[posz[0]];
     for(int y=0;y<=5;y++){
     if(pente[y]==b && i==y){posz[1]=y-1;rvl[1]=pente[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@6 ^5 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(pente[i]==a){posz[0]=i-1; rvl[0]=pente[posz[0]];
     for(int y=0;y<=5;y++){
     if(tessera[y]==b && i==y){posz[1]=y-1;rvl[1]=tessera[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@5 ^4 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(tessera[i]==a){posz[0]=i-1; rvl[0]=tessera[posz[0]];
     for(int y=0;y<=5;y++){
     if(tria[y]==b && i==y){posz[1]=y-1;rvl[1]=tria[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@4 ^3 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(tria[i]==a){posz[0]=i-1; rvl[0]=tria[posz[0]];
     for(int y=0;y<=5;y++){
     if(dio[y]==b && i==y){posz[1]=y-1;rvl[1]=dio[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@3 ^2 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(dio[i]==a){posz[0]=i-1; rvl[0]=dio[posz[0]];
     for(int y=0;y<=5;y++){
     if(ena[y]==b && i==y){posz[1]=y-1;rvl[1]=ena[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@2 ^1 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
  clear_pos();
  for(int i=0;i<=5;i++){
     if(ena[i]==a){posz[0]=i-1; rvl[0]=ena[posz[0]];
     for(int y=0;y<=5;y++){
     if(okto[y]==b && i==y){posz[1]=y-1;rvl[1]=okto[posz[1]];stt=1;rst=1;}
     }
     }
  }
  if(stt==1){cout<<"@1 ^8 :"<< rvl[0] << " and " << rvl[1] <<"\n";}
return rst;

}
