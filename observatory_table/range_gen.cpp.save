#include "range_gen.h"

range_gen::range_gen(){}//ctor
range_gen::~range_gen(){}//dtor
range_gen::range_gen(const range_gen& other){}//copy ctor
// handle self assignment//assignment operator
range_gen& range_gen::operator=(const range_gen& rhs){if (this == &rhs) return *this; return *this;}

int range_gen::gen_them(long long int xx,int start_custom,int end_custom){
    long long int remove_one=xx-start_custom;
    long long int add_one=xx+start_custom;
    long long int remove_thr=xx-end_custom;
    long long int add_thr=xx+end_custom;
    long long int ao;
    long long int ado;
    long long int rthr;
    long long int athr;
    ao=xx+remove_one;
    ado=xx+add_one;
    rthr=xx+remove_thr;
    athr=xx+add_thr;
    range_one[0]=remove_one;range_one[1]=xx;
    range_two[0]=xx;range_two[1]=add_one;
    range_three[0]=xx;range_three[1]=xx+(end_custom-2);range_three[2]=xx+(end_custom-1);range_three[3]=xx+(end_custom);
    range_four[0]=xx-(end_custom);range_four[1]=xx+(end_custom-2);range_four[2]=xx+(end_custom-1);range_four[3]=xx;

    for(int i=0;i<=9;i++){
        range_five[i]=remove_thr;
        remove_thr+=1;
        if(remove_thr>add_thr){break;}
    }
return 0;
}

int range_gen::show_one(){for(int i=0;i<=1;i++){cout<< range_one[i] << " ";} cout<<"\n"; return 0;}

int range_gen::show_two(){for(int i=0;i<=1;i++){cout<<range_two[i] << " ";}cout<<"\n"; return 0;}